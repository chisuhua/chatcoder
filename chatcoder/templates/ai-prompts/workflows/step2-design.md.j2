# 🧱 软件设计阶段

{% include "common/context.md.j2" %}

## 📝 功能需求
{{ description }}

## 🔗 上下文依赖
{% if previous_task %}
- **基于任务**: `{{ previous_task.task_id }}`
- **前序结论**: {{ previous_task.description }}
{% else %}
- 无前序分析，需自行完成需求澄清。
{% endif %}

## 🎯 设计目标
你是一名资深工程师，请完成以下设计任务：

1. **模块划分**  
   - 如何将功能分解为独立模块？
   - 模块间如何通信？（API、事件、共享内存等）

2. **接口定义**  
   - 对外暴露的函数、类、方法签名
   - 输入/输出数据结构（不依赖具体语言）

3. **数据模型**  
   - 核心实体及其属性
   - 数据关系与约束

4. **关键流程**  
   - 核心算法或业务流程
   - 异常处理与边界条件

5. **技术选型**  
   - 是否需要新依赖？为什么？
   - 性能、安全、扩展性考虑

6. **风险与权衡**  
   - 设计中的取舍（如性能 vs 可维护性）
   - 潜在缺陷与应对策略

## 📋 输出要求
- 使用清晰的标题和段落组织内容
- 可使用伪代码、UML 描述、表格等形式
- 避免具体语言语法（除非必要）
- 不输出实现代码

## 🚫 禁止行为
- 不得跳过设计直接输出代码
- 不得虚构项目中不存在的组件
- 不得忽略上下文中的技术栈约束
